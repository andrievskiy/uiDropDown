{"version":3,"sources":["_0uiDropDownPoliffils.js","dom/_uiDropDownElement.js","ajax/_uiDropDownAjax.js","html/_uiDropDownHtmlUtil.js","keyboard/_uiDropDowKeyboardConstants.js","keyboard/_uiDropDownKeyboardUtil.js","template/_uiDropDownTemplate.js","_uiDropDownSuggestionItem.js","_uiDropDownSelectedSuggestionItem.js","_uiDropDownUsersMatcher.js","uiDropDownWidget.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"ui-drop-down.js","sourcesContent":["/**\n * Created by andrievskiy on 05.06.2017.\n */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (target, firstSource) {\n            'use strict';\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            for (var i = 1; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n            return to;\n        }\n    });\n}","/**\n * Модуль для работы с DOM\n */\n(function (window) {\n    'use strict';\n\n    /**\n     * @param selectorOrElement {String | HtmlElement}\n     * @returns {_UiElement}\n     * @constructor\n     */\n    function UiElement(selectorOrElement) {\n        return new _UiElement(selectorOrElement);\n    }\n\n    /**\n     * Create new DOM element and wrap to UiElement\n     * @param tagName\n     * @returns {_UiElement}\n     */\n    UiElement.create = function (tagName) {\n        return new _UiElement(document.createElement(tagName));\n    };\n\n\n    /**\n     * Класс враппера для работы с DOM элементами\n     * @param selectorOrElement\n     * @private\n     */\n    function _UiElement(selectorOrElement) {\n        this.element = null;\n        if (typeof selectorOrElement == \"string\") {\n            this.element = document.querySelector(selectorOrElement);\n        }\n        if (selectorOrElement instanceof HTMLElement) {\n            this.element = selectorOrElement;\n        }\n        if(this.element === null){\n            console.error('Invalid or unsupported selector or dom element: ' + selectorOrElement);\n        }\n    }\n\n    /**\n     * Расчет координат относительно документа, учитывая clientTop/clientLeft\n     * @returns {{top: number, left: number}}\n     */\n    _UiElement.prototype.getCoordinates = function () {\n        var byWindow = this.element.getBoundingClientRect();\n        var bodyElement = document.body;\n        var documentElement = document.documentElement;\n\n        var scrollTop = window.pageYOffset || documentElement.scrollTop || bodyElement.scrollTop;\n        var scrollLeft = window.pageXOffset || documentElement.scrollLeft || bodyElement.scrollLeft;\n\n        var clientTop = documentElement.clientTop || bodyElement.clientTop || 0;\n        var clientLeft = documentElement.clientLeft || bodyElement.clientLeft || 0;\n\n        return {\n            top: byWindow.top + scrollTop - clientTop,\n            left: byWindow.left + scrollLeft - clientLeft,\n            bottom: byWindow.bottom + scrollTop - clientTop,\n            right: byWindow.right + scrollLeft - clientLeft\n        }\n    };\n\n    /**\n     * clientLeft\n     * @returns {number}\n     */\n    _UiElement.prototype.clientLeft = function () {\n        return this.element.clientLeft;\n    };\n\n    /**\n     * clientRight = в реалльности borderRightWidth\n     * @returns {number}\n     */\n    _UiElement.prototype.clientRight = function () {\n        var computedStyles = window.getComputedStyle(this.element);\n        var borderRight = computedStyles.borderRightWidth;\n        borderRight = borderRight.split('px')[0];\n        return +borderRight;\n    };\n\n    /**\n     * clientTop\n     * @returns {number}\n     */\n    _UiElement.prototype.clientTop = function () {\n        return this.element.clientTop;\n    };\n\n\n    /**\n     * offsetWidth\n     * @returns {number}\n     */\n    _UiElement.prototype.offsetWidth = function () {\n        return this.element.offsetWidth;\n    };\n\n    /**\n     *clientWidth\n     * @returns {number}\n     */\n    _UiElement.prototype.clientWidth = function () {\n        return this.element.clientWidth;\n    };\n\n    /**\n     * offsetHeight\n     * @returns {number}\n     */\n    _UiElement.prototype.offsetHeight = function () {\n        return this.element.offsetHeight;\n    };\n\n    /**\n     * clientHeight\n     * @returns {number}\n     */\n    _UiElement.prototype.clientHeight = function () {\n        return this.element.clientHeight;\n    };\n\n\n\n    /**\n     *\n     * @returns {number}\n     */\n    _UiElement.prototype.scrollWidth = function () {\n        return this.element.scrollWidth;\n    };\n\n    /**\n     * Добавить класс\n     * @param cls {str}\n     */\n    _UiElement.prototype.addClass = function (cls) {\n        this.element.classList.add(cls);\n    };\n\n    /**\n     * Удалить класс\n     * @param cls {str}\n     */\n    _UiElement.prototype.removeClass = function (cls) {\n      this.element.classList.remove(cls);\n    };\n\n    /**\n     * Обернуть элемент враппером\n     * @param wrapper {UiElement}\n     */\n    _UiElement.prototype.wrap = function (wrapper) {\n        var el, parent;\n        if(wrapper instanceof _UiElement){\n            el = wrapper.element;\n        } else{\n            el = wrapper;\n        }\n\n        parent = this.element.parentNode;\n\n\n        if(this.element.nextSibling){\n            parent.insertBefore(el, this.element.nextSibling);\n        } else {\n            parent.appendChild(el);\n        }\n        el.appendChild(this.element);\n    };\n\n    /**\n     *\n     * @param value {string | Number}\n     * @returns {*|string|Number|undefined}\n     */\n    _UiElement.prototype.val = function (value) {\n        if(value != undefined){\n            this.element.value = value;\n            return;\n        }\n        return this.element.value;\n    };\n\n    /**\n     * Подписка на событие\n     * @param eventKey {string}\n     * @param callback {Function}\n     * @param stage\n     */\n    _UiElement.prototype.on = function (eventKey, callback, stage) {\n        this.element.addEventListener(eventKey, callback, stage);\n    };\n\n    /**\n     * Отмена подписки на событие\n     * @param evenKey {string}\n     * @param callback {Function}\n     * @param stage\n     */\n    _UiElement.prototype.off = function (evenKey, callback, stage) {\n        this.element.removeEventListener(evenKey, callback, stage);\n    };\n\n    /**\n     * Удалить потомка\n     * @param child {UiElement | Node}\n     * @returns {Node}\n     */\n    _UiElement.prototype.removeChild =function (child) {\n        if(child instanceof _UiElement){\n            child = child.element;\n        }\n        return this.element.removeChild(child);\n    };\n\n    /**\n     * Добаить потомка к элементу\n     * @param child {UiElement | Node}\n     * @returns {Node}\n     */\n    _UiElement.prototype.append = function (child) {\n        if(child instanceof _UiElement){\n             return this.element.appendChild(child.element);\n        }\n        return this.element.appendChild(child);\n    };\n\n    /**\n     * Установаить или поллучить innerHtml\n     * @param val {string}\n     * @returns {string | undefined}\n     */\n    _UiElement.prototype.html = function (val) {\n        if(val != undefined){\n            this.element.innerHTML = val;\n            return;\n        }\n        return this.element.innerHTML;\n    };\n\n    /**\n     * Удаление элемента из DOM\n     */\n    _UiElement.prototype.remove = function(){\n        this.element.parentNode.removeChild(this.element);\n    };\n\n    /**\n     * Установить или получить css свойства\n     * @param css {object}\n     * @returns {CSSStyleDeclaration}\n     */\n    _UiElement.prototype.css = function (css) {\n        var self = this;\n        if(!css){\n            return window.getComputedStyle(this.element);\n        }\n        Object.keys(css).forEach(function (property) {\n           self.element.style[property] = css[property];\n        });\n    };\n\n    /**\n     * Прокси для проброса style\n     */\n    Object.defineProperties(_UiElement.prototype, {\n        style: {\n            get: function () {\n                return this.element.style;\n            }\n        }\n    });\n\n    window.UiElement = UiElement;\n\n})(window);","/**\n * Простая обертка к XMLHttpRequest\n */\n(function (window) {\n    function _makeGetArgs(params) {\n        var parts = [];\n        Object.keys(params).forEach(function (key) {\n            parts.push(key + '=' + params[key]);\n        });\n        return '?' + parts.join('&');\n    }\n\n    function isOkStatusCode(code){\n        return code >= 200 && code < 300;\n    }\n\n    /**\n     * Совершает ajax запрос\n     * @param options {object} - параметры запроса\n     * @param options.method {string} - HTTP метод запроса (GET|POST|PUT|DELETE)\n     * @param options.url {string} - Url для запрсоа\n     * @param options.params {object} - Uri (GET) параметра запроса\n     * @param options.onError {Function} - Функция-обработчик ошибок\n     * @param options.onSuccess {Function} -  Функция-обработчик успешного запроса\n     * @param options.data {object} - Данные для загрузки (payload)\n     * @returns {XMLHttpRequest}\n     */\n    function uiDropDownAjax(options) {\n        var xhr = new XMLHttpRequest();\n        var url = options.url + _makeGetArgs(options.params);\n        xhr.open(options.method.toUpperCase(), url);\n\n        xhr.onerror = function () {\n            console.error(xhr.status, xhr.statusText);\n            if (options.onError) {\n                options.onError(xhr);\n            }\n        };\n\n        xhr.onload = function () {\n            var response;\n            if (isOkStatusCode(xhr.status)) {\n                if (options.onSuccess) {\n                    if (~xhr.getResponseHeader('Content-Type').indexOf('application/json')) {\n                        try {\n                            response = JSON.parse(xhr.responseText);\n                        } catch (e) {\n                            console.error(e);\n                            response = null;\n                        }\n                    } else {\n                        response = xhr.responseText;\n                    }\n                    options.onSuccess(response);\n                }\n            } else{\n                console.error('Unexpected response code: ', xhr.status);\n            }\n        };\n\n        if (options.method.toUpperCase() != 'GET') {\n            xhr.send(options.data);\n        } else {\n            xhr.send();\n        }\n        return xhr;\n    }\n\n    window.uiDropDownajax = uiDropDownAjax;\n})(window);","/**\n * Утилиты для работы с html\n */\n(function (window) {\n\n    var ESCAPE_CHARS = {\n        '¢': 'cent',\n        '£': 'pound',\n        '¥': 'yen',\n        '€': 'euro',\n        '©': 'copy',\n        '®': 'reg',\n        '<': 'lt',\n        '>': 'gt',\n        '\"': 'quot',\n        '&': 'amp',\n        '\\'': '#39'\n    }, regex;\n\n    function _makeRegexpString() {\n        var regexString = '[';\n\n        for (var key in ESCAPE_CHARS) {\n            regexString += key;\n        }\n        regexString += ']';\n\n        return regexString;\n    }\n\n    regex = new RegExp(_makeRegexpString(), 'g');\n\n    /**\n     * Производит экранирование html символов\n     * @param str\n     * @returns {*}\n     */\n    function uiDropDownHtmlEscaping(str) {\n        if(typeof str != 'string'){\n            return str;\n        }\n        return str.replace(regex, function (m) {\n            return '&' + ESCAPE_CHARS[m] + ';';\n        });\n    }\n\n    window.uiDropDownHtmlEscaping = uiDropDownHtmlEscaping;\n})(window);","/**\n * Константы для работы с различными расладками.\n * Используются в uiDropDownKeyBoardUtil\n */\n(function (window) {\n    'use strict';\n    var LATIN_TO_CYRILLIC_KEYBOARD = {\n        'q': 'й',\n        'w': 'ц',\n        'e': 'у',\n        'r': 'к',\n        't': 'е',\n        'y': 'н',\n        'u': 'г',\n        'i': 'ш',\n        'o': 'щ',\n        'p': 'з',\n        '{': 'х',\n        '}': 'ъ',\n        'a': 'ф',\n        's': 'ы',\n        'd': 'в',\n        'f': 'а',\n        'g': 'п',\n        'h': 'р',\n        'j': 'о',\n        'k': 'л',\n        'l': 'д',\n        ';': 'ж',\n        \"'\": 'э',\n        'z': 'я',\n        'x': 'ч',\n        'c': 'с',\n        'v': 'м',\n        'b': 'и',\n        'n': 'т',\n        'm': 'ь',\n        ',': 'б',\n        '.': 'ю'\n    };\n\n    var CYRILLIC_TO_LATIN_KEYBOARD = {};\n\n    Object.keys(LATIN_TO_CYRILLIC_KEYBOARD).map(function (key) {\n        var k = LATIN_TO_CYRILLIC_KEYBOARD[key];\n        CYRILLIC_TO_LATIN_KEYBOARD[k] = key;\n    });\n\n    var LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP = {\n        'shch': 'щ',\n        'sch': 'щ',\n        'yo': 'ё',\n        'zh': 'ж',\n        'kh': 'х',\n        'ts': 'ц',\n        'ch': 'ч',\n        'sh': 'ш',\n        'eh': 'э',\n        'yu': 'ю',\n        'ya': 'я',\n        \"'\": 'ь'\n    };\n\n    var CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP = {};\n\n    Object.keys(LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP).map(function (key) {\n        var k = LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP[key];\n        CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP[k] = key;\n    });\n\n\n    var MULTIPLE_LATIN_CHARS = {\n        'y': ['ы', 'ё', 'ю', 'я'],\n        'z': ['ж', 'з'],\n        'k': ['х', 'к'],\n        't': ['ц', 'т'],\n        'c': ['ц', 'ч', 'щ'],\n        's': ['ш', 'щ', 'с'],\n        'e': ['е', 'э']\n    };\n\n    var LATIN_ALPHABET = 'abvgdezijklmnoprstufhcyABVGDEZIJKLMNOPRSTUFHCYёЁ';\n    var CYRILLIC_ALPHABET = 'абвгдезийклмнопрстуфхцыАБВГДЕЗИЙКЛМНОПРСТУФХЦЫеЕ';\n\n    window.uiDropDownKeyboardConstants = {\n        LATIN_TO_CYRILLIC_KEYBOARD: LATIN_TO_CYRILLIC_KEYBOARD,\n        CYRILLIC_TO_LATIN_KEYBOARD: CYRILLIC_TO_LATIN_KEYBOARD,\n        LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP: LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP,\n        CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP: CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP,\n        MULTIPLE_LATIN_CHARS: MULTIPLE_LATIN_CHARS,\n        LATIN_ALPHABET: LATIN_ALPHABET,\n        CYRILLIC_ALPHABET: CYRILLIC_ALPHABET\n    };\n\n})(window);","/**\n * Модуль для работы с вариантами различных расладок.\n * Осуществляет поиск всех возможных преставлений строки.\n * Например кщпщя -> rogoz -> рогоз\n *\n */\n(function (window) {\n    'use strict';\n\n    /**\n     * Производит сортировку по длине строки.\n     * @param a\n     * @param b\n     * @returns {number}\n     * @private\n     */\n    function _sortKeysComparator(a, b) {\n        if (a.length < b.length) {\n            return -1;\n        }\n        if (a.length > b.length) {\n            return 1;\n        }\n        return 0;\n    }\n\n    function _replaceAlaphabet(str, srcAlphabet, dstAlphabet) {\n        for (var i = 0; i < srcAlphabet.length; i++) {\n            str = str.split(srcAlphabet.charAt(i)).join(dstAlphabet.charAt(i));\n        }\n        return str;\n    }\n\n    /**\n     * _latinToCyrillicVariants -> возвращает возможные варианты раскладки для латнских букв по строке\n     * @param str {string}\n     * @returns {Array}\n     * @private\n     */\n    function _latinToCyrillicVariants(str) {\n\n        var variants;\n        var chars;\n        var firstChars;\n\n        // Сначала происходит замена \"букв\" из нескольких символов\n\n        firstChars = Object.keys(uiDropDownKeyboardConstants.LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP);\n        firstChars.sort(_sortKeysComparator);\n        firstChars.forEach(function (char) {\n            str = str.split(char).join(uiDropDownKeyboardConstants.LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP[char]);\n        });\n\n        chars = str.split('');\n        variants = _extendVariants(chars);\n\n        variants = variants.map(function (variant) {\n            return _replaceAlaphabet(\n                variant.join(''), uiDropDownKeyboardConstants.LATIN_ALPHABET, uiDropDownKeyboardConstants.CYRILLIC_ALPHABET\n            );\n        });\n\n        return variants;\n\n\n        /**\n         * Производит расширение вариантов для  символов соответствующих нескольким русским буквам\n         * при условии что символ находится в конце строки (т.е. невозиожно определить к чему он приводится)\n         * @param chars {string}\n         * @returns {Array}\n         * @private\n         */\n        function _extendVariants(chars) {\n            var variants = [chars];\n            var lastChart = chars[chars.length - 1];\n            var chartVariants;\n\n            if (uiDropDownKeyboardConstants.MULTIPLE_LATIN_CHARS[lastChart]) {\n                variants = [];\n                chartVariants = uiDropDownKeyboardConstants.MULTIPLE_LATIN_CHARS[lastChart];\n                chartVariants.forEach(function (chartVar) {\n\n                    var newVariant = chars.slice(0, chars.length - 1);\n                    newVariant.push(chartVar);\n                    variants.push(newVariant);\n                });\n            }\n            return variants;\n        }\n    }\n\n\n    function _cyrillicToLatinVariants(str) {\n\n        var firstChars = Object.keys(uiDropDownKeyboardConstants.CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP);\n        firstChars.sort(_sortKeysComparator);\n\n        // Сначала происходит замена \"букв\" из нескольких символов\n        firstChars.forEach(function (char) {\n            str = str.split(char).join(uiDropDownKeyboardConstants.CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP[char]);\n        });\n\n        var variant = _replaceAlaphabet(str, uiDropDownKeyboardConstants.CYRILLIC_ALPHABET, uiDropDownKeyboardConstants.LATIN_ALPHABET);\n\n        return [variant];\n    }\n\n\n    /**\n     * toCyrillicKeyboard -> Производит замену латинской раскладки на кириллицу\n     * @param str {string}\n     * @returns {string}\n     */\n    function toCyrillicKeyboard(str) {\n        var result = '';\n        var chars = str.split('');\n        chars.forEach(function (chart) {\n            result += uiDropDownKeyboardConstants.LATIN_TO_CYRILLIC_KEYBOARD[chart] || chart;\n        });\n\n        return result;\n    }\n\n    /**\n     * toLatinKeyboard -> Производит замену кириллической раскладки на латинскую\n     * @param str {string}\n     * @returns {string}\n     */\n    function toLatinKeyboard(str) {\n        var result = '';\n        var chars = str.split('');\n        chars.forEach(function (chart) {\n            result += uiDropDownKeyboardConstants.CYRILLIC_TO_LATIN_KEYBOARD[chart] || chart;\n        });\n        return result;\n    }\n\n\n    /**\n     * getPrefixVariables -> Возвращает все варианты представления по строке\n     *\n     * @param prefix {string}\n     * @returns {Array}\n     * @private\n     */\n    function getKeyboardsVariables(prefix) {\n        var variables = [];\n        var cyrillicKeyboard;\n        var latinKeyboard;\n\n        // Получение всех кирилических вариантов по латинице\n        // За счет того, что латиница уже, то одну строку на ней\n        // Можжно представить несколькими на кирилице\n        // Например: z = ж | z = з\n\n        variables = variables.concat(_latinToCyrillicVariants(prefix));\n\n        // Приведение кириллицы к латинице\n        // Например: юа => yoa\n        variables.concat(_cyrillicToLatinVariants(prefix));\n\n        // Приведение расладок\n\n        cyrillicKeyboard = toCyrillicKeyboard(prefix);\n        latinKeyboard = toLatinKeyboard(prefix);\n        variables.push(cyrillicKeyboard);\n        variables.push(latinKeyboard);\n\n        // Транслитерация для раскладок\n        // Например: кщпщя -> rogoz -> рогоз\n\n        variables.push(_cyrillicToLatinVariants(cyrillicKeyboard));\n        variables = variables.concat(_latinToCyrillicVariants(latinKeyboard));\n\n        // Вывод уникальных валидаторов\n        variables = variables.filter(function (item, idx, array) {\n            return array.indexOf(item) === idx;\n        });\n\n        return variables;\n    }\n\n\n    /**\n     * Набор утилит для работы с раскладкми.\n     * toCyrillicKeyboard -> Производит замену латинской раскладки на кириллицу\n     * toLatinKeyboard -> Производит замену кириллической раскладки на латиницу\n     * getPrefixVariables -> Возвращает все варианты представления по строке\n     * @type {{toCyrillicKeyboard: toCyrillicKeyboard, toLatinKeyboard: toLatinKeyboard, getPrefixVariables: getKeyboardsVariables}}\n     */\n    window.uiDropDownKeyBoardUtil = {\n        toCyrillicKeyboard: toCyrillicKeyboard,\n        toLatinKeyboard: toLatinKeyboard,\n        getPrefixVariables: getKeyboardsVariables\n    };\n\n})(window);","/**\n * Модуль для работы с шаблонами\n */\n;(function (window) {\n\n    /**\n     * Рендеринг шаблонов\n     * @param template {string} - Шаблон для рендеринга\n     *                            Подстановки производяться по швблону {name}\n     *                            При этом при указании {name::html} для данного значения не будет производиться экранирование\n     * @param data {object} - Даные для рендеринга. Поиск даныных для подставновок производится по ключам этого объекта\n     * @returns {string}\n     */\n    function renderTemplate(template, data) {\n        return template.replace(/{([\\w|:]+)}/g, function (match, key) {\n\n            var isHtml = ~key.indexOf('::html');\n            if(isHtml){\n                key = key.split('::')[0];\n                return data[key] || '';\n            }\n            return uiDropDownHtmlEscaping(data[key] || '');\n        })\n    }\n\n    window.uiRenderTemplate = renderTemplate;\n})(window);",";(function (window) {\n    function DropDownSuggestionItem(template, data, matchedBy) {\n        return new _DropDownSuggestionItem(template, data, matchedBy);\n    }\n\n    function _DropDownSuggestionItem(template, data, matchedBy, defaultAvatarUrl) {\n        var self = this;\n        this.uiElement = UiElement.create('div');\n        this.uiElement.addClass('ui-drop-down-item-container');\n\n        this.template = template;\n        this.data = data;\n        this.matchedBy = matchedBy;\n\n        this.name = uiDropDownHtmlEscaping(this.data.name);\n        this.name = this.name.replace(this.matchedBy, '<span class=\"ui-drop-down-highlight\">' + this.matchedBy + '</span>');\n        this.uid = this.data.uid;\n        this.avatarUrl = this.data.avatarUrl || this.data.avatar || defaultAvatarUrl || '';\n\n\n        Object.keys(this.data).forEach(function (dataKey) {\n            if(!self[dataKey]){\n                self[dataKey] = self.data[dataKey];\n            }\n        });\n    }\n    \n    _DropDownSuggestionItem.prototype.render = function () {\n        var html = uiRenderTemplate(this.template, this);\n        this.uiElement.html(html);\n        return this.uiElement;\n    };\n\n    window.DropDownSuggestionItem = DropDownSuggestionItem;\n})(window);",";(function (window) {\n    var dropDownItemDefaultTemplate = '';\n\n    function DropDownSelectedSuggestionItem(template, data, matchedBy) {\n        return new _DropDownSelectedSuggestionItem(template, data, matchedBy);\n    }\n\n    function _DropDownSelectedSuggestionItem(template, data, multiple) {\n        var self = this;\n        this.uiElement = UiElement.create('div');\n        var containerCls = multiple ? 'ui-drop-down-selected-suggestion': 'ui-drop-down-single-selected-suggestion';\n        this.uiElement.addClass(containerCls);\n\n        this.template = template || dropDownItemDefaultTemplate;\n        this.data = data;\n        this.name = this.data.name;\n        this.uid = this.data.uid;\n\n        Object.keys(this.data).forEach(function (dataKey) {\n            if(!self[dataKey]){\n                self[dataKey] = self.data[dataKey];\n            }\n        });\n    }\n    \n    _DropDownSelectedSuggestionItem.prototype.render = function () {\n        var html = uiRenderTemplate(this.template, this);\n        this.uiElement.html(html);\n        return this.uiElement;\n    };\n\n    window.DropDownSelectedSuggestionItem = DropDownSelectedSuggestionItem;\n})(window);","(function (window) {\n    /**\n     * Производит сравнение по префиксу с учетом раскладок и транслитерации\n     * @param prefix {String}\n     * @param suggestion {Object}\n     * @param selectedSuggestions {Array}\n     * @param options {Object}\n     * @param options.byProperty {String} - свойтво по которму производится сравненение\n     * @param options.uidProperty {String} - свойтво уникальный идентификатор\n     * @returns {Object}\n     */\n\n    function uiDropDownUsersMatcher(prefix, suggestion, selectedSuggestions, options) {\n        // TODO: произветси оптимизацию поиска\n        options = options || { byProperty: 'name', uidProperty: 'uid' };\n\n        var result = {\n            matched: false,\n            matchedBy: null\n        };\n        var prefixes, suggestionParts, matched;\n\n        if(selectedSuggestions[suggestion[options.uidProperty]]){\n            return result;\n        }\n\n        prefix = prefix.trim().toLowerCase();\n\n        prefixes = uiDropDownKeyBoardUtil.getPrefixVariables(prefix);\n\n        suggestionParts = suggestion[options.byProperty].split(' ');\n\n        suggestionParts.push(suggestion[options.byProperty]);\n\n        matched = suggestionParts.some(function (part) {\n            var originalPart = part;\n            part = part.toLowerCase().trim();\n\n            return prefixes.some(function (prefix) {\n                originalPart = originalPart.slice(0, prefix.length);\n\n                var matched =  part.slice(0, prefix.length) === prefix;\n                if(matched){\n                    result.matchedBy = originalPart;\n                }\n                return matched;\n            });\n        });\n        result.matched = matched && !selectedSuggestions[suggestion[options.uidProperty]];\n        return result;\n    }\n\n    window.uiDropDownUsersMatcher = uiDropDownUsersMatcher;\n})(window);",";(function (window) {\n    var DEFAULT_SUGGESTION_TEMPLATE =\n        '<div class=\"ui-drop-down-suggestion-item\" data-user-id=\"{uid}\">' +\n        '   <img class=\"ui-drop-down-suggestion-item-avatar\" src=\"{avatarUrl}\">' +\n        '   <label class=\"ui-drop-down-suggestion-item-name\">{name::html}</label>' +\n        '   <span class=\"ui-drop-down-suggestion-item-extra\">{extra}</span>' +\n        '</div>';\n\n    var DEFAULT_SUGGESTION_TEMPLATE_WITHOUT_AVATARS =\n        '<div class=\"ui-drop-down-suggestion-item\" data-user-id=\"{uid}\">' +\n        '   <label class=\"ui-drop-down-suggestion-item-name\">{name::html}</label>' +\n        '</div>';\n\n    var DEFAULT_MULTIPLE_SELECTED_ITEM_TEMPLATE =\n        '<div class=\"ui-drop-down-selected-item\">' +\n        '   <div class=\"ui-drop-down-selected-name\"><span>{name}</span></div>' +\n        '   <a class=\"ui-drop-down-selected-remove-btn\" data-user-id=\"{uid}\" data-is-remove-button=\"true\"></a>' +\n        '</div>';\n\n    var DEFAULT_SINGLE_SELECTED_ITEM_TEMPLATE =\n        '<div class=\"ui-drop-down-single-selected-item\">' +\n        '    <div class=\"ui-drop-down-single-selected-name\">{name}</div>' +\n        '    <a class=\"ui-drop-down-selected-single-remove-btn\" data-user-id=\"{uid}\" data-is-remove-button=\"true\">+</a>' +\n        '</div>';\n\n    var DEFAULT_EMPTY_MESSAGE =\n        '<div class=\"ui-drop-down-suggestion-item\">' +\n        '   <p>Пользователь не найден</p>' +\n        '</div>';\n\n    var DEFAULT_OPTIONS = {\n        multiple: true,\n        autocomplete: true,\n        showAvatars: true,\n        defaultAvatarUrl: null,\n        limit: 10,\n\n        serverSide: false,\n        serverSideUrl: '/',\n        serverSideMethod: 'GET',\n        serverSideFindProperty: 'domain',\n        suggestionIdentifierProperty: 'uid',\n\n        suggestionTemplateWithAvatar: DEFAULT_SUGGESTION_TEMPLATE,\n        suggestionTemplateWithoutAvatar: DEFAULT_SUGGESTION_TEMPLATE_WITHOUT_AVATARS,\n        selectedMultipleItemTemplate: DEFAULT_MULTIPLE_SELECTED_ITEM_TEMPLATE,\n        selectedSingleItemTemplate: DEFAULT_SINGLE_SELECTED_ITEM_TEMPLATE,\n        emptyMessageTemplate: DEFAULT_EMPTY_MESSAGE\n\n    };\n\n    function UiDropDown(selector, options) {\n        var self = this;\n\n        options = options || {};\n\n        /**\n         * Возравщает список выбранных элементов\n         * @returns {Array}\n         */\n        self.getSelected = function () {\n            return Object.keys(self.selectedItems).map(function (key) {\n                return self.selectedItems[key];\n            });\n        };\n\n        self.options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n        self._cache = {};\n        self._lastVal = null;\n        self._serverQuryIsRunning = false;\n\n        self._suggestionTemplate = getSuggestionTemplate();\n        self._selectedItemTemplate = getSelectedItemTemplate();\n\n        self.inputElement = UiElement(selector);\n        self.inputElement.addClass('ui-drop-down-input');\n        if (!self.options.autocomplete) {\n            self.inputElement.element.setAttribute('readonly', 'true');\n        }\n\n        self.suggestions = self.options.suggestions || [];\n        self.matcher = self.options.matcher || uiDropDownUsersMatcher;\n\n        self.matchedSuggestions = [];\n        self._matchesSuggestionIds = Object.create(null);\n        self.selectedItems = Object.create(null);\n\n        self._dropDownInputWrapper = createDropDownInputWrapper();\n        self._suggestionsWrapper = createSuggestionWrapper();\n        self._selectedContainer = createSelectedSuggestionsContainer();\n        self._dropDownIcon = createDropDownIcon();\n        appendElementsToDom();\n\n\n        self.inputElement.on('focus', onFocusInputHandler);\n        self.inputElement.on('keyup', deBounce(onKeyUpInputHandler, 300));\n        self.inputElement.on('blur', onBlurInputElement);\n\n        self._dropDownInputWrapper.on('click', onClickWrapper);\n\n        self._suggestionsWrapper.on('mouseenter', onHoverSuggestionsWrapper);\n        self._suggestionsWrapper.on('mouseleave', onMouseLeaveSuggestionsWrapper);\n\n        self._selectedContainer.on('click', onClickSelectedContainer);\n\n        function appendElementsToDom() {\n            self.inputElement.wrap(self._dropDownInputWrapper);\n            document.body.appendChild(self._suggestionsWrapper.element);\n\n            self._dropDownInputWrapper.element.insertBefore(self._dropDownIcon.element, self.inputElement.element);\n            self._dropDownInputWrapper.element.insertBefore(self._selectedContainer.element, self.inputElement.element);\n\n            var originInputElementW = self.inputElement.clientWidth();\n            console.log(originInputElementW);\n            console.log('offsetWidth', self._dropDownIcon.offsetWidth());\n\n            self.inputElement.css({\n                width: originInputElementW - self._dropDownIcon.offsetWidth()- 15 + 'px'\n            });\n        }\n\n        function createDropDownIcon(){\n            var e = UiElement.create('div');\n            e.addClass('ui-widget-drop-down-icon');\n            return e;\n        }\n\n\n        function getSuggestionTemplate() {\n            if (self.options.showAvatars) {\n                return self.options.suggestionTemplateWithAvatar;\n            }\n            return self.options.suggestionTemplateWithoutAvatar;\n        }\n\n        function getSelectedItemTemplate() {\n            if (self.options.multiple) {\n                return self.options.selectedMultipleItemTemplate;\n            }\n            return self.options.selectedSingleItemTemplate;\n        }\n\n        function isSelected(item) {\n            return Boolean(self.selectedItems[item[self.options.suggestionIdentifierProperty]]);\n        }\n\n        function addItemToSelected(item) {\n            self.selectedItems[item[self.options.suggestionIdentifierProperty]] = item;\n        }\n\n        function isInMatchedSuggestions(item) {\n            return Boolean(self._matchesSuggestionIds[item[self.options.suggestionIdentifierProperty]]);\n        }\n\n        function addToMatchedSuggestions(item) {\n            self.matchedSuggestions.push(item);\n            self._matchesSuggestionIds[item[self.options.suggestionIdentifierProperty]] = true;\n        }\n\n        function onClickSelectedContainer(event) {\n            var target = event.target;\n            if (target.getAttribute('data-is-remove-button') == 'true') {\n                removeSelectedSuggestion(target);\n                if (!self.getSelected().length) {\n                    hideSelectedContainer();\n                    showInputElement();\n                }\n            } else {\n                activateInputElement();\n            }\n\n        }\n\n        function open() {\n            if ((!self.options.multiple && self.options.autocomplete) || !self.getSelected().length) {\n                hideSelectedContainer();\n            }\n\n            showSuggestionList();\n            search();\n        }\n\n        function search() {\n            lookup();\n            renderAllMatchedSuggestions();\n        }\n\n        function close() {\n            if (self._suggestionsWrapper.hovered) {\n                return;\n            }\n            hideSuggestiosnList();\n            if (self.options.multiple && self.getSelected().length) {\n                hideInputElement();\n            }\n            if (!self.options.multiple && self.getSelected().length) {\n                hideInputElement();\n                showSelectedContainer();\n            }\n        }\n\n        function onFocusInputHandler() {\n            open();\n        }\n\n        function onKeyUpInputHandler() {\n            search();\n        }\n\n        function onClickWrapper(event) {\n            if (event.target === this) {\n                activateInputElement();\n            }\n            if(event.target == self._dropDownIcon.element){\n                activateInputElement();\n            }\n        }\n\n        function onBlurInputElement() {\n            close();\n        }\n\n        function onHoverSuggestionsWrapper() {\n            self._suggestionsWrapper.hovered = true;\n        }\n\n        function onMouseLeaveSuggestionsWrapper() {\n            self._suggestionsWrapper.hovered = false;\n        }\n\n        function _clearLastSelected() {\n            Object.keys(self.selectedItems).forEach(function (prop) {\n                delete self.selectedItems[prop];\n            });\n            var children = Array.prototype.slice.apply(self._selectedContainer.element.children);\n            children.forEach(function (child) {\n                child.parentNode.removeChild(child);\n            });\n\n        }\n\n        function onSelectSuggestion(item, element) {\n            if (!self.options.multiple) {\n                _clearLastSelected();\n            }\n            addItemToSelected(item);\n            element.parentNode.removeChild(element);\n            self.inputElement.val('');\n            hideSuggestiosnList();\n            renderSelectedSuggestion(item);\n            hideInputElement();\n            // Событие не будет послано брузером. Поэтому нужно простваить руками.\n            self._suggestionsWrapper.hovered = false;\n            showSelectedContainer();\n        }\n\n        function showSelectedContainer() {\n            self._selectedContainer.addClass('show');\n        }\n\n        function hideSelectedContainer() {\n            self._selectedContainer.removeClass('show');\n        }\n\n        function hideInputElement() {\n            if (self.getSelected().length) {\n                self.inputElement.style.display = 'none';\n            }\n        }\n\n        function showInputElement() {\n            self.inputElement.style.display = 'block';\n            if (!self.options.autocomplete && self.getSelected().length) {\n                self.inputElement.addClass('ui-drop-down-input-hidden');\n            } else {\n                self.inputElement.removeClass('ui-drop-down-input-hidden');\n            }\n        }\n\n        function focusInputElement() {\n            if (document.activeElement !== self.inputElement.element) {\n                self.inputElement.element.focus();\n            }\n        }\n\n        function activateInputElement() {\n            showInputElement();\n            focusInputElement();\n        }\n\n        function createSuggestionWrapper() {\n            var element = UiElement.create('div');\n            element.addClass('ui-drop-down-autocomplete-suggestions');\n            return element;\n        }\n\n        function createDropDownInputWrapper() {\n            function setStyles(wrapper) {\n                var position = self.inputElement.css().position;\n                wrapper.css({\n                    width: self.inputElement.offsetWidth() + 'px',\n                    position: position\n                });\n            }\n\n            var element = UiElement.create('div');\n            element.addClass('ui-drop-down-input-wrapper');\n            setStyles(element);\n\n            return element;\n        }\n\n        function createSelectedSuggestionsContainer() {\n            var element = UiElement.create('div');\n            element.addClass('ui-drop-down-selected-container');\n\n            return element;\n        }\n\n        function showSuggestionList() {\n            self._suggestionsWrapper.addClass('show');\n            positionSuggestionList();\n        }\n\n        function hideSuggestiosnList() {\n            self._suggestionsWrapper.removeClass('show');\n        }\n\n\n        /**\n         * Прозводит позиционирование блока предложений относительно эелемента\n         * В зависимости от его позиционирования(static/relative)\n         */\n        function positionSuggestionList() {\n            var inputWrapperCoordinates = self._dropDownInputWrapper.getCoordinates();\n\n            self._suggestionsWrapper.style.top =\n                inputWrapperCoordinates.bottom - self._dropDownInputWrapper.clientTop() + 'px';\n\n            self._suggestionsWrapper.style.left = inputWrapperCoordinates.left + 'px';\n\n            self._suggestionsWrapper.style.width =\n                self._dropDownInputWrapper.offsetWidth() - self._suggestionsWrapper.clientLeft() - self._suggestionsWrapper.clientRight() + 'px';\n        }\n\n        function clearMatchedSuggestionsList() {\n            var children = Array.prototype.slice.apply(self._suggestionsWrapper.element.children);\n\n            children.forEach(function (childNode) {\n                self._suggestionsWrapper.removeChild(childNode);\n            });\n        }\n\n        function renderAllMatchedSuggestions() {\n            // Если пачка предложений пуста, то производить очистку и показвать сообщение нужно только\n            // Если предложения не смогут появиться с сервера\n            if (!self.matchedSuggestions.length && !self._serverQuryIsRunning) {\n                clearMatchedSuggestionsList();\n                showEmptySuggestionMessage();\n                return;\n            }\n\n            // Если запрос еще выпоняется, то очистку списка нужно производить\n            // Только если есть записи\n            if (self.matchedSuggestions.length) {\n                clearMatchedSuggestionsList();\n            }\n            self.matchedSuggestions.forEach(function (item) {\n                renderMatchedSuggestion(item);\n            });\n        }\n\n        function renderMatchedSuggestion(suggestion) {\n            // TODO: Исправить проброс matchedBy\n            var matchedBy = suggestion.mathedBy;\n            delete suggestion.mathedBy;\n\n            var dropDownItem = DropDownSuggestionItem(\n                self._suggestionTemplate, suggestion, matchedBy, self.options.defaultAvatarUrl\n            );\n            dropDownItem.render();\n            // TODO: пернести обработчик на suggestion-list. Испрользовать делегирование,\n            // TODO: чтообы избавиться от лишних обработчиков\n            // TODO: С ходу мешает необходимость ссылки на item(suggestion)\n            dropDownItem.uiElement.on('click', function () {\n                onSelectSuggestion(suggestion, this);\n            });\n            self._suggestionsWrapper.append(dropDownItem.uiElement);\n        }\n\n\n        function removeSelectedSuggestion(element) {\n            // TODO: Добавить id. Чтобы не зависеть от верстки\n            var uid = element.getAttribute('data-user-id');\n            var container = element.parentNode;\n            container = container.parentNode;\n            console.log(container);\n            delete self.selectedItems[uid];\n            container.parentNode.removeChild(container);\n\n\n        }\n\n        function renderSelectedSuggestion(suggestion) {\n            var selectedItem = DropDownSelectedSuggestionItem(\n                self._selectedItemTemplate, suggestion, self.options.multiple\n            );\n            selectedItem.render();\n            self._selectedContainer.append(selectedItem.uiElement);\n        }\n\n        function _lookUpEmptyPrefix() {\n            var counter = 0;\n            var idx = 0;\n            while (counter < self.options.limit && idx < self.suggestions.length) {\n                var item = self.suggestions[idx];\n                if (isSelected(item)) {\n                    idx++;\n                    continue;\n                }\n\n                addToMatchedSuggestions(item);\n                counter++;\n                idx++;\n            }\n        }\n\n        function lookup() {\n            var counter = 0;\n            var idx = 0;\n\n            var prefix = self.inputElement.val();\n\n            if (prefix == self._lastVal && prefix !== '') {\n                return;\n            }\n\n            self._lastVal = prefix;\n            self.matchedSuggestions = [];\n            self._matchesSuggestionIds = Object.create(null);\n\n            if (prefix === '') {\n                _lookUpEmptyPrefix();\n                return;\n            }\n\n            console.time('lookUp');\n            while (counter < self.options.limit && idx < self.suggestions.length) {\n                var matchResult = self.matcher(prefix, self.suggestions[idx], self.selectedItems);\n                if (matchResult.matched) {\n                    self.suggestions[idx].mathedBy = matchResult.matchedBy;\n                    addToMatchedSuggestions(self.suggestions[idx]);\n                    counter++;\n                }\n                idx++;\n            }\n            console.timeEnd('lookUp');\n\n            if (self.options.serverSide) {\n                serverLookUp(prefix);\n            }\n        }\n\n\n        function appendMatchedSuggestionsFromServer(suggestions) {\n            suggestions.forEach(function (suggestion) {\n                if (!isSelected(suggestion) && !isInMatchedSuggestions(suggestion)) {\n                    addToMatchedSuggestions(suggestion);\n                    renderMatchedSuggestion(suggestion);\n                }\n            });\n        }\n\n        function onServerLookUpLoaded(prefix, response) {\n            self._cache[prefix] = response.result;\n            if (!self.matchedSuggestions.length) {\n                clearMatchedSuggestionsList();\n            }\n            if (response.result.length) {\n                appendMatchedSuggestionsFromServer(response.result);\n            } else if (!self.matchedSuggestions.length) {\n                showEmptySuggestionMessage();\n                self._lastIsEmpty = true;\n            }\n        }\n\n        function serverLookUp(prefix) {\n            if (prefix == '') {\n                return;\n            }\n            self._serverQuryIsRunning = true;\n            var _cached = self._cache[prefix];\n            var findParams = {};\n\n            if (_cached) {\n                appendMatchedSuggestionsFromServer(_cached);\n                self._serverQuryIsRunning = false;\n                return;\n            }\n\n            findParams[self.options.serverSideFindProperty] = prefix;\n            findParams['limit'] = self.options.limit;\n\n            uiDropDownajax({\n                method: self.options.serverSideMethod,\n                url: self.options.serverSideUrl,\n                data: findParams,\n                params: findParams,\n                onError: function (xrh) {\n                    console.log('ERROR', xrh.statusText);\n                    if (!self.matchedSuggestions.length) {\n                        clearMatchedSuggestionsList();\n                        showEmptySuggestionMessage();\n                    }\n                    self._serverQuryIsRunning = false;\n                },\n                onSuccess: function (response) {\n                    onServerLookUpLoaded(prefix, response);\n                    self._serverQuryIsRunning = false;\n                }\n            });\n        }\n\n        function deBounce(func, wait, immediate) {\n            var timeout;\n            return function () {\n                var context = this, args = arguments;\n\n                var later = function () {\n                    timeout = null;\n                    if (!immediate) func.apply(context, args);\n                };\n\n                var callNow = immediate && !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(later, wait);\n                if (callNow) {\n                    func.apply(context, args);\n                }\n            };\n        }\n\n        function showEmptySuggestionMessage() {\n            var dropDownItem = DropDownSuggestionItem(self.options.emptyMessageTemplate, {name: 'empty'});\n            dropDownItem.render();\n            self._suggestionsWrapper.append(dropDownItem.uiElement.element);\n        }\n    }\n\n    window.UiDropDown = UiDropDown;\n})(window);"]}