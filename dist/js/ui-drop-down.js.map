{"version":3,"sources":["_0uiDropDownPoliffils.js","ajax/_uiDropDownAjax.js","dom/_uiDropDownElement.js","events/_uiDropDownEventsConstants.js","keyboard/_uiDropDowKeyboardConstants.js","keyboard/_uiDropDownKeyboardUtil.js","html/_uiDropDownHtmlUtil.js","template/_uiDropDownTemplate.js","_uiDropDownSuggestionItem.js","_uiDropDownSelectedSuggestionItem.js","_uiDropDownUsersMatcher.js","uiDropDownWidget.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrpUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbppxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"ui-drop-down.js","sourcesContent":["/**\n * Created by andrievskiy on 05.06.2017.\n */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (target, firstSource) {\n            'use strict';\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            for (var i = 1; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n            return to;\n        }\n    });\n}","/**\n * Простая обертка к XMLHttpRequest\n */\n(function (window) {\n    function _makeGetArgs(params) {\n        var parts = [];\n        Object.keys(params).forEach(function (key) {\n            parts.push(key + '=' + params[key]);\n        });\n        return '?' + parts.join('&');\n    }\n\n    function isOkStatusCode(code){\n        return code >= 200 && code < 300;\n    }\n\n    /**\n     * Совершает ajax запрос\n     * @param options {object} - параметры запроса\n     * @param options.method {string} - HTTP метод запроса (GET|POST|PUT|DELETE)\n     * @param options.url {string} - Url для запрсоа\n     * @param options.params {object} - Uri (GET) параметра запроса\n     * @param options.onError {Function} - Функция-обработчик ошибок\n     * @param options.onSuccess {Function} -  Функция-обработчик успешного запроса\n     * @param options.data {object} - Данные для загрузки (payload)\n     * @returns {XMLHttpRequest}\n     */\n    function uiDropDownAjax(options) {\n        var xhr = new XMLHttpRequest();\n        var url = options.url + _makeGetArgs(options.params);\n        xhr.open(options.method.toUpperCase(), url);\n\n        xhr.onerror = function () {\n            console.error(xhr.status, xhr.statusText);\n            if (options.onError) {\n                options.onError(xhr);\n            }\n        };\n\n        xhr.onload = function () {\n            var response;\n            if (isOkStatusCode(xhr.status)) {\n                if (options.onSuccess) {\n                    if (~xhr.getResponseHeader('Content-Type').indexOf('application/json')) {\n                        try {\n                            response = JSON.parse(xhr.responseText);\n                        } catch (e) {\n                            console.error(e);\n                            response = null;\n                        }\n                    } else {\n                        response = xhr.responseText;\n                    }\n                    options.onSuccess(response);\n                }\n            } else{\n                console.error('Unexpected response code: ', xhr.status);\n            }\n        };\n\n        if (options.method.toUpperCase() != 'GET') {\n            xhr.send(options.data);\n        } else {\n            xhr.send();\n        }\n        return xhr;\n    }\n\n    window.uiDropDownajax = uiDropDownAjax;\n})(window);","/**\n * Модуль для работы с DOM\n */\n(function (window) {\n    'use strict';\n\n    /**\n     * @param selectorOrElement {String | HtmlElement}\n     * @returns {_UiElement}\n     * @constructor\n     */\n    function UiElement(selectorOrElement) {\n        if(selectorOrElement instanceof _UiElement){\n            return selectorOrElement;\n        }\n        return new _UiElement(selectorOrElement);\n    }\n\n    /**\n     * Create new DOM element and wrap to UiElement\n     * @param tagName\n     * @returns {_UiElement}\n     */\n    UiElement.create = function (tagName) {\n        return new _UiElement(document.createElement(tagName));\n    };\n\n\n    /**\n     * Класс враппера для работы с DOM элементами\n     * @param selectorOrElement\n     * @private\n     */\n    function _UiElement(selectorOrElement) {\n        this.element = null;\n        if (typeof selectorOrElement == \"string\") {\n            this.element = document.querySelector(selectorOrElement);\n        }\n        if (selectorOrElement instanceof HTMLElement) {\n            this.element = selectorOrElement;\n        }\n        if(this.element === null){\n            console.error('Invalid or unsupported selector or dom element: ' + selectorOrElement);\n        }\n    }\n\n    /**\n     * Расчет координат относительно документа, учитывая clientTop/clientLeft\n     * @returns {{top: number, left: number}}\n     */\n    _UiElement.prototype.getCoordinates = function () {\n        var byWindow = this.element.getBoundingClientRect();\n        var bodyElement = document.body;\n        var documentElement = document.documentElement;\n\n        var scrollTop = window.pageYOffset || documentElement.scrollTop || bodyElement.scrollTop;\n        var scrollLeft = window.pageXOffset || documentElement.scrollLeft || bodyElement.scrollLeft;\n\n        var clientTop = documentElement.clientTop || bodyElement.clientTop || 0;\n        var clientLeft = documentElement.clientLeft || bodyElement.clientLeft || 0;\n\n        return {\n            top: byWindow.top + scrollTop - clientTop,\n            left: byWindow.left + scrollLeft - clientLeft,\n            bottom: byWindow.bottom + scrollTop - clientTop,\n            right: byWindow.right + scrollLeft - clientLeft\n        }\n    };\n\n    /**\n     * clientLeft\n     * @returns {number}\n     */\n    _UiElement.prototype.clientLeft = function () {\n        return this.element.clientLeft;\n    };\n\n    /**\n     * clientRight = в реалльности borderRightWidth\n     * @returns {number}\n     */\n    _UiElement.prototype.clientRight = function () {\n        var computedStyles = window.getComputedStyle(this.element);\n        var borderRight = computedStyles.borderRightWidth;\n        borderRight = borderRight.split('px')[0];\n        return +borderRight;\n    };\n\n    /**\n     * clientTop\n     * @returns {number}\n     */\n    _UiElement.prototype.clientTop = function () {\n        return this.element.clientTop;\n    };\n\n\n    /**\n     * offsetWidth\n     * @returns {number}\n     */\n    _UiElement.prototype.offsetWidth = function () {\n        return this.element.offsetWidth;\n    };\n\n    /**\n     *clientWidth\n     * @returns {number}\n     */\n    _UiElement.prototype.clientWidth = function () {\n        return this.element.clientWidth;\n    };\n\n    /**\n     * offsetHeight\n     * @returns {number}\n     */\n    _UiElement.prototype.offsetHeight = function () {\n        return this.element.offsetHeight;\n    };\n\n    /**\n     * clientHeight\n     * @returns {number}\n     */\n    _UiElement.prototype.clientHeight = function () {\n        return this.element.clientHeight;\n    };\n\n\n\n    /**\n     *\n     * @returns {number}\n     */\n    _UiElement.prototype.scrollWidth = function () {\n        return this.element.scrollWidth;\n    };\n\n    /**\n     * Добавить класс\n     * @param cls {str}\n     */\n    _UiElement.prototype.addClass = function (cls) {\n        this.element.classList.add(cls);\n    };\n\n    /**\n     * Удалить класс\n     * @param cls {str}\n     */\n    _UiElement.prototype.removeClass = function (cls) {\n      this.element.classList.remove(cls);\n    };\n\n    /**\n     * Обернуть элемент враппером\n     * @param wrapper {UiElement}\n     */\n    _UiElement.prototype.wrap = function (wrapper) {\n        var el, parent;\n        if(wrapper instanceof _UiElement){\n            el = wrapper.element;\n        } else{\n            el = wrapper;\n        }\n\n        parent = this.element.parentNode;\n\n\n        if(this.element.nextSibling){\n            parent.insertBefore(el, this.element.nextSibling);\n        } else {\n            parent.appendChild(el);\n        }\n        el.appendChild(this.element);\n    };\n\n    /**\n     *\n     * @param value {string | Number}\n     * @returns {*|string|Number|undefined}\n     */\n    _UiElement.prototype.val = function (value) {\n        if(value != undefined){\n            this.element.value = value;\n            return;\n        }\n        return this.element.value;\n    };\n\n    /**\n     * Подписка на событие\n     * @param eventKey {string}\n     * @param callback {Function}\n     * @param stage\n     */\n    _UiElement.prototype.on = function (eventKey, callback, stage) {\n        this.element.addEventListener(eventKey, callback, stage);\n    };\n\n    /**\n     * Отмена подписки на событие\n     * @param evenKey {string}\n     * @param callback {Function}\n     * @param stage\n     */\n    _UiElement.prototype.off = function (evenKey, callback, stage) {\n        this.element.removeEventListener(evenKey, callback, stage);\n    };\n\n    /**\n     * Удалить потомка\n     * @param child {UiElement | Node}\n     * @returns {Node}\n     */\n    _UiElement.prototype.removeChild =function (child) {\n        if(child instanceof _UiElement){\n            child = child.element;\n        }\n        return this.element.removeChild(child);\n    };\n\n    /**\n     * Добаить потомка к элементу\n     * @param child {UiElement | Node}\n     * @returns {Node}\n     */\n    _UiElement.prototype.append = function (child) {\n        if(child instanceof _UiElement){\n             return this.element.appendChild(child.element);\n        }\n        return this.element.appendChild(child);\n    };\n\n    /**\n     * Установаить или поллучить innerHtml\n     * @param val {string}\n     * @returns {string | undefined}\n     */\n    _UiElement.prototype.html = function (val) {\n        if(val != undefined){\n            this.element.innerHTML = val;\n            return;\n        }\n        return this.element.innerHTML;\n    };\n\n    /**\n     * Удаление элемента из DOM\n     */\n    _UiElement.prototype.remove = function(){\n        this.element.parentNode.removeChild(this.element);\n    };\n\n    /**\n     * Установить или получить css свойства\n     * @param css {object}\n     * @returns {CSSStyleDeclaration}\n     */\n    _UiElement.prototype.css = function (css) {\n        var self = this;\n        if(!css){\n            return window.getComputedStyle(this.element);\n        }\n        Object.keys(css).forEach(function (property) {\n           self.element.style[property] = css[property];\n        });\n    };\n\n    /**\n     *\n     * @param {String} attrName\n     * @param {String} attrVal\n     */\n    _UiElement.prototype.setAttribute = function (attrName, attrVal) {\n        this.element.setAttribute(attrName, attrVal);\n    };\n\n    /**\n     * Следующий элмент nextSibling\n     * @returns {Node}\n     */\n    _UiElement.prototype.next = function () {\n        return this.element.nextSibling;\n    };\n\n    /**\n     * Предыидцщий элмент previousSibling\n     * @returns {Node}\n     */\n    _UiElement.prototype.prev = function () {\n        return this.element.previousSibling;\n    };\n\n    /**\n     * Фиксирвоанный список потомков елемента. Фиксация на момент вызова.\n     * @returns {[Node]}\n     */\n    _UiElement.prototype.children = function () {\n      return Array.prototype.slice.apply(this.element.children);\n    };\n\n    _UiElement.prototype.parent = function () {\n        return new _UiElement(this.element.parentNode);\n    };\n\n    _UiElement.prototype.parentNode = function () {\n        return this.element.parentNode;\n    };\n\n    /**\n     * Прокси для проброса style\n     */\n    Object.defineProperties(_UiElement.prototype, {\n        style: {\n            get: function () {\n                return this.element.style;\n            }\n        }\n    });\n\n    window.UiElement = UiElement;\n\n})(window);","/**\n * Хранилище констант для событий\n */\n;(function (window) {\n   var EVENTS_KEY_CODES = {\n       ENTER: 13,\n       ARROW_DOWN: 40,\n       ARROW_UP: 38,\n       ESCAPE: 27\n   };\n\n   window.uiDropDownEventsKeyCodes = EVENTS_KEY_CODES;\n\n})(window);","/**\n * Константы для работы с различными расладками.\n * Используются в uiDropDownKeyBoardUtil\n */\n(function (window) {\n    'use strict';\n    var LATIN_TO_CYRILLIC_KEYBOARD = {\n        'q': 'й',\n        'w': 'ц',\n        'e': 'у',\n        'r': 'к',\n        't': 'е',\n        'y': 'н',\n        'u': 'г',\n        'i': 'ш',\n        'o': 'щ',\n        'p': 'з',\n        '{': 'х',\n        '[': 'х',\n        ']': 'ъ',\n        '}': 'ъ',\n        'a': 'ф',\n        's': 'ы',\n        'd': 'в',\n        'f': 'а',\n        'g': 'п',\n        'h': 'р',\n        'j': 'о',\n        'k': 'л',\n        'l': 'д',\n        ';': 'ж',\n        ':': 'ж',\n        \"'\": 'э',\n        '\"': 'э',\n        'z': 'я',\n        'x': 'ч',\n        'c': 'с',\n        'v': 'м',\n        'b': 'и',\n        'n': 'т',\n        'm': 'ь',\n        ',': 'б',\n        '<': 'б',\n        '>': 'ю',\n        '.': 'ю'\n    };\n\n    var CYRILLIC_TO_LATIN_KEYBOARD = {};\n\n    Object.keys(LATIN_TO_CYRILLIC_KEYBOARD).map(function (key) {\n        var k = LATIN_TO_CYRILLIC_KEYBOARD[key];\n        CYRILLIC_TO_LATIN_KEYBOARD[k] = key;\n    });\n\n    var LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP = {\n        'shch': 'щ',\n        'sch': 'щ',\n        'yo': 'ё',\n        'zh': 'ж',\n        'kh': 'х',\n        'ts': 'ц',\n        'ch': 'ч',\n        'sh': 'ш',\n        'eh': 'э',\n        'yu': 'ю',\n        'ya': 'я',\n        \"'\": 'ь'\n    };\n\n    var CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP = {};\n\n    Object.keys(LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP).map(function (key) {\n        var k = LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP[key];\n        CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP[k] = key;\n    });\n\n\n    var MULTIPLE_LATIN_CHARS = {\n        'y': ['ы', 'ё', 'ю', 'я'],\n        'z': ['ж', 'з'],\n        'k': ['х', 'к'],\n        't': ['ц', 'т'],\n        'c': ['ц', 'ч', 'щ'],\n        's': ['ш', 'щ', 'с'],\n        'e': ['е', 'э']\n    };\n\n    var LATIN_ALPHABET = 'abvgdezijklmnoprstufhcyABVGDEZIJKLMNOPRSTUFHCYёЁ';\n    var CYRILLIC_ALPHABET = 'абвгдезийклмнопрстуфхцыАБВГДЕЗИЙКЛМНОПРСТУФХЦЫеЕ';\n\n    window.uiDropDownKeyboardConstants = {\n        LATIN_TO_CYRILLIC_KEYBOARD: LATIN_TO_CYRILLIC_KEYBOARD,\n        CYRILLIC_TO_LATIN_KEYBOARD: CYRILLIC_TO_LATIN_KEYBOARD,\n        LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP: LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP,\n        CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP: CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP,\n        MULTIPLE_LATIN_CHARS: MULTIPLE_LATIN_CHARS,\n        LATIN_ALPHABET: LATIN_ALPHABET,\n        CYRILLIC_ALPHABET: CYRILLIC_ALPHABET\n    };\n\n})(window);","/**\n * Модуль для работы с вариантами различных расладок.\n * Осуществляет поиск всех возможных преставлений строки.\n * Например кщпщя -> rogoz -> рогоз\n *\n */\n(function (window) {\n    'use strict';\n\n    /**\n     * Производит сортировку по длине строки.\n     * @param a\n     * @param b\n     * @returns {number}\n     * @private\n     */\n    function _sortKeysComparator(a, b) {\n        if (a.length < b.length) {\n            return -1;\n        }\n        if (a.length > b.length) {\n            return 1;\n        }\n        return 0;\n    }\n\n    function _replaceAlaphabet(str, srcAlphabet, dstAlphabet) {\n        for (var i = 0; i < srcAlphabet.length; i++) {\n            str = str.split(srcAlphabet.charAt(i)).join(dstAlphabet.charAt(i));\n        }\n        return str;\n    }\n\n    /**\n     * _latinToCyrillicVariants -> возвращает возможные варианты раскладки для латнских букв по строке\n     * @param str {string}\n     * @returns {Array}\n     * @private\n     */\n    function _latinToCyrillicVariants(str) {\n\n        var variants;\n        var chars;\n        var firstChars;\n\n        // Сначала происходит замена \"букв\" из нескольких символов\n\n        firstChars = Object.keys(uiDropDownKeyboardConstants.LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP);\n        firstChars.sort(_sortKeysComparator);\n        firstChars.forEach(function (char) {\n            str = str.split(char).join(uiDropDownKeyboardConstants.LATIN_TO_CYRILLIC_FIRST_REPLACE_MAP[char]);\n        });\n\n        chars = str.split('');\n        variants = _extendVariants(chars);\n\n        variants = variants.map(function (variant) {\n            return _replaceAlaphabet(\n                variant.join(''), uiDropDownKeyboardConstants.LATIN_ALPHABET, uiDropDownKeyboardConstants.CYRILLIC_ALPHABET\n            );\n        });\n\n        return variants;\n\n\n        /**\n         * Производит расширение вариантов для  символов соответствующих нескольким русским буквам\n         * при условии что символ находится в конце строки (т.е. невозиожно определить к чему он приводится)\n         * @param chars {string}\n         * @returns {Array}\n         * @private\n         */\n        function _extendVariants(chars) {\n            var variants = [chars];\n            var lastChart = chars[chars.length - 1];\n            var chartVariants;\n\n            if (uiDropDownKeyboardConstants.MULTIPLE_LATIN_CHARS[lastChart]) {\n                variants = [];\n                chartVariants = uiDropDownKeyboardConstants.MULTIPLE_LATIN_CHARS[lastChart];\n                chartVariants.forEach(function (chartVar) {\n\n                    var newVariant = chars.slice(0, chars.length - 1);\n                    newVariant.push(chartVar);\n                    variants.push(newVariant);\n                });\n            }\n            return variants;\n        }\n    }\n\n\n    function _cyrillicToLatinVariants(str) {\n\n        var firstChars = Object.keys(uiDropDownKeyboardConstants.CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP);\n        firstChars.sort(_sortKeysComparator);\n\n        // Сначала происходит замена \"букв\" из нескольких символов\n        firstChars.forEach(function (char) {\n            str = str.split(char).join(uiDropDownKeyboardConstants.CYRILLIC_TO_LATIN_FIRST_REPLACE_MAP[char]);\n        });\n\n        var variant = _replaceAlaphabet(str, uiDropDownKeyboardConstants.CYRILLIC_ALPHABET, uiDropDownKeyboardConstants.LATIN_ALPHABET);\n\n        return [variant];\n    }\n\n\n    /**\n     * toCyrillicKeyboard -> Производит замену латинской раскладки на кириллицу\n     * @param str {string}\n     * @returns {string}\n     */\n    function toCyrillicKeyboard(str) {\n        var result = '';\n        var chars = str.split('');\n        chars.forEach(function (chart) {\n            result += uiDropDownKeyboardConstants.LATIN_TO_CYRILLIC_KEYBOARD[chart] || chart;\n        });\n\n        return result;\n    }\n\n    /**\n     * toLatinKeyboard -> Производит замену кириллической раскладки на латинскую\n     * @param str {string}\n     * @returns {string}\n     */\n    function toLatinKeyboard(str) {\n        var result = '';\n        var chars = str.split('');\n        chars.forEach(function (chart) {\n            result += uiDropDownKeyboardConstants.CYRILLIC_TO_LATIN_KEYBOARD[chart] || chart;\n        });\n        return result;\n    }\n\n\n    /**\n     * getPrefixVariables -> Возвращает все варианты представления по строке\n     *\n     * @param prefix {string}\n     * @returns {Array}\n     * @private\n     */\n    function getKeyboardsVariables(prefix) {\n        var variables = [];\n        var cyrillicKeyboard;\n        var latinKeyboard;\n\n        // Получение всех кирилических вариантов по латинице\n        // За счет того, что латиница уже, то одну строку на ней\n        // Можжно представить несколькими на кирилице\n        // Например: z = ж | z = з\n\n        variables = variables.concat(_latinToCyrillicVariants(prefix));\n\n        // Приведение кириллицы к латинице\n        // Например: юа => yoa\n        variables.concat(_cyrillicToLatinVariants(prefix));\n\n        // Приведение расладок\n\n        cyrillicKeyboard = toCyrillicKeyboard(prefix);\n        latinKeyboard = toLatinKeyboard(prefix);\n        variables.push(cyrillicKeyboard);\n        variables.push(latinKeyboard);\n\n        // Транслитерация для раскладок\n        // Например: кщпщя -> rogoz -> рогоз\n\n        variables.push(_cyrillicToLatinVariants(cyrillicKeyboard));\n        variables = variables.concat(_latinToCyrillicVariants(latinKeyboard));\n\n        // Вывод уникальных валидаторов\n        variables = variables.filter(function (item, idx, array) {\n            return array.indexOf(item) === idx;\n        });\n\n        return variables;\n    }\n\n\n    /**\n     * Набор утилит для работы с раскладкми.\n     * toCyrillicKeyboard -> Производит замену латинской раскладки на кириллицу\n     * toLatinKeyboard -> Производит замену кириллической раскладки на латиницу\n     * getPrefixVariables -> Возвращает все варианты представления по строке\n     * @type {{toCyrillicKeyboard: toCyrillicKeyboard, toLatinKeyboard: toLatinKeyboard, getPrefixVariables: getKeyboardsVariables}}\n     */\n    window.uiDropDownKeyBoardUtil = {\n        toCyrillicKeyboard: toCyrillicKeyboard,\n        toLatinKeyboard: toLatinKeyboard,\n        getPrefixVariables: getKeyboardsVariables\n    };\n\n})(window);","/**\n * Утилиты для работы с html\n */\n(function (window) {\n\n    var ESCAPE_CHARS = {\n        '¢': 'cent',\n        '£': 'pound',\n        '¥': 'yen',\n        '€': 'euro',\n        '©': 'copy',\n        '®': 'reg',\n        '<': 'lt',\n        '>': 'gt',\n        '\"': 'quot',\n        '&': 'amp',\n        '\\'': '#39'\n    }, regex;\n\n    function _makeRegexpString() {\n        var regexString = '[';\n\n        for (var key in ESCAPE_CHARS) {\n            regexString += key;\n        }\n        regexString += ']';\n\n        return regexString;\n    }\n\n    regex = new RegExp(_makeRegexpString(), 'g');\n\n    /**\n     * Производит экранирование html символов\n     * @param str\n     * @returns {*}\n     */\n    function uiDropDownHtmlEscaping(str) {\n        if(typeof str != 'string'){\n            return str;\n        }\n        return str.replace(regex, function (m) {\n            return '&' + ESCAPE_CHARS[m] + ';';\n        });\n    }\n\n    window.uiDropDownHtmlEscaping = uiDropDownHtmlEscaping;\n})(window);","/**\n * Модуль для работы с шаблонами\n */\n;(function (window) {\n\n    /**\n     * Рендеринг шаблонов\n     * @param template {string} - Шаблон для рендеринга\n     *                            Подстановки производяться по швблону {name}\n     *                            При этом при указании {name::html} для данного значения не будет производиться экранирование\n     * @param data {object} - Даные для рендеринга. Поиск даныных для подставновок производится по ключам этого объекта\n     * @returns {string}\n     */\n    function renderTemplate(template, data) {\n        return template.replace(/{([\\w|:]+)}/g, function (match, key) {\n\n            var isHtml = ~key.indexOf('::html');\n            if(isHtml){\n                key = key.split('::')[0];\n                return data[key] || '';\n            }\n            return uiDropDownHtmlEscaping(data[key] || '');\n        })\n    }\n\n    window.uiRenderTemplate = renderTemplate;\n})(window);",";(function (window) {\n    function DropDownSuggestionItem(template, data, matchedBy) {\n        return new _DropDownSuggestionItem(template, data, matchedBy);\n    }\n\n    function _DropDownSuggestionItem(template, data, matchedBy, defaultAvatarUrl) {\n        var self = this;\n        this.uiElement = UiElement.create('div');\n        this.uiElement.addClass('ui-drop-down-item-container');\n\n\n        this.template = template;\n        this.data = data;\n        this.matchedBy = matchedBy;\n\n        this.uiElement.element.setAttribute('data-uid', this.data.uid);\n\n        this.uid = this.data.uid;\n        this.avatarUrl = this.data.avatarUrl || this.data.avatar || defaultAvatarUrl || '';\n\n\n        Object.keys(this.data).forEach(function (dataKey) {\n            if(!self[dataKey]){\n                self[dataKey] = self.data[dataKey];\n            }\n        });\n    }\n    \n    _DropDownSuggestionItem.prototype.render = function () {\n        this.highlight();\n        var html = uiRenderTemplate(this.template, this);\n        this.uiElement.html(html);\n        return this.uiElement;\n    };\n\n    _DropDownSuggestionItem.prototype.highlight = function () {\n        this.name = uiDropDownHtmlEscaping(this.data.name);\n        this.name = this.name.replace(this.matchedBy, '<span class=\"ui-drop-down-highlight\">' + this.matchedBy + '</span>');\n    };\n    window.DropDownSuggestionItem = DropDownSuggestionItem;\n})(window);",";(function (window) {\n    var dropDownItemDefaultTemplate = '';\n\n    function DropDownSelectedSuggestionItem(template, data, matchedBy) {\n        return new _DropDownSelectedSuggestionItem(template, data, matchedBy);\n    }\n\n    function _DropDownSelectedSuggestionItem(template, data, multiple) {\n        var self = this;\n        this.uiElement = UiElement.create('div');\n        var containerCls = multiple ? 'ui-drop-down-selected-suggestion': 'ui-drop-down-single-selected-suggestion';\n        this.uiElement.addClass(containerCls);\n        this.uiElement.element.setAttribute('data-is-selected-suggestion', 'true');\n\n        this.template = template || dropDownItemDefaultTemplate;\n        this.data = data;\n        this.name = this.data.name;\n        this.uid = this.data.uid;\n\n        Object.keys(this.data).forEach(function (dataKey) {\n            if(!self[dataKey]){\n                self[dataKey] = self.data[dataKey];\n            }\n        });\n    }\n    \n    _DropDownSelectedSuggestionItem.prototype.render = function () {\n        var html = uiRenderTemplate(this.template, this);\n        this.uiElement.html(html);\n        return this.uiElement;\n    };\n\n    window.DropDownSelectedSuggestionItem = DropDownSelectedSuggestionItem;\n})(window);","(function (window) {\n    /**\n     * Производит сравнение по префиксу с учетом раскладок и транслитерации\n     * @param prefix {String} - префикс по которому производится поиск\n     * @param suggestion {Object} - предложение, котрое нужно проверить\n     * @param selectedSuggestions {Array} - уже выбранные предложения\n     * @param options {Object} - список опций\n     * @param options.byProperty {String} - свойтво по которму производится сравненение\n     * @param options.uidProperty {String} - свойтво уникальный идентификатор\n     * @returns {Object} - результат поиска\n     *    {\n     *      matched: {Boolean} - флаг подходит или нет объект под префикс,\n     *      matchedBy: {string} - подстрока по которой произошло совпадение\n     *    }\n     */\n\n\n    function uiDropDownUsersMatcher(prefix, suggestion, selectedSuggestions, options) {\n        // TODO: Скорость работы через регулярные выражения оказалась ниже\n        // TODO: Придумать способ повысить эффективность поиска\n        options = options || { byProperty: 'name', uidProperty: 'uid' };\n\n        var result = {\n            matched: false,\n            matchedBy: null\n        };\n        var prefixes, suggestionParts, matched;\n\n        if(selectedSuggestions[suggestion[options.uidProperty]]){\n            return result;\n        }\n\n        prefix = prefix.trim().toLowerCase();\n\n        prefixes = uiDropDownKeyBoardUtil.getPrefixVariables(prefix);\n\n        suggestionParts = suggestion[options.byProperty].split(' ');\n\n        suggestionParts.push(suggestion[options.byProperty]);\n\n        matched = suggestionParts.some(function (part) {\n            var originalPart = part;\n            part = part.toLowerCase().trim();\n\n            return prefixes.some(function (prefix) {\n                originalPart = originalPart.slice(0, prefix.length);\n\n                var matched =  part.slice(0, prefix.length) === prefix;\n                if(matched){\n                    result.matchedBy = originalPart;\n                }\n                return matched;\n            });\n        });\n        result.matched = matched && !selectedSuggestions[suggestion[options.uidProperty]];\n        return result;\n    }\n\n    window.uiDropDownUsersMatcher = uiDropDownUsersMatcher;\n})(window);",";(function (window) {\n    var DEFAULT_SUGGESTION_TEMPLATE =\n        '<div class=\"ui-drop-down-suggestion-item\" data-uid=\"{uid}\">' +\n        '   <img class=\"ui-drop-down-suggestion-item-avatar\" src=\"{avatarUrl}\">' +\n        '   <label class=\"ui-drop-down-suggestion-item-name\">{name::html}</label>' +\n        '   <span class=\"ui-drop-down-suggestion-item-extra\">{extra}</span>' +\n        '</div>';\n\n    var DEFAULT_SUGGESTION_TEMPLATE_WITHOUT_AVATARS =\n        '<div class=\"ui-drop-down-suggestion-item\" data-uid=\"{uid}\">' +\n        '   <label class=\"ui-drop-down-suggestion-item-name\">{name::html}</label>' +\n        '   <span class=\"ui-drop-down-suggestion-item-extra\">{extra}</span>' +\n        '</div>';\n\n    var DEFAULT_MULTIPLE_SELECTED_ITEM_TEMPLATE =\n        '<div class=\"ui-drop-down-selected-item\" data-is-selected-name=\"true\">' +\n        '   <div class=\"ui-drop-down-selected-name\" data-is-selected-name=\"true\">' +\n        '       <span data-is-selected-name=\"true\">{name}</span>' +\n        '   </div>' +\n        '   <a class=\"ui-drop-down-selected-remove-btn\" data-user-id=\"{uid}\" data-is-remove-button=\"true\"></a>' +\n        '</div>';\n\n    var DEFAULT_SINGLE_SELECTED_ITEM_TEMPLATE =\n        '<div class=\"ui-drop-down-single-selected-item\">' +\n        '    <div class=\"ui-drop-down-single-selected-name\">{name}</div>' +\n        '    <a class=\"ui-drop-down-selected-single-remove-btn\" data-user-id=\"{uid}\" data-is-remove-button=\"true\">+</a>' +\n        '</div>';\n\n    var DEFAULT_EMPTY_MESSAGE =\n        '<div class=\"ui-drop-down-suggestion-item\">' +\n        '   <p>Пользователь не найден</p>' +\n        '</div>';\n\n    var ADD_NEW_BUTTON_TEMPLATE =\n        '<div  class=\"ui-drop-down-selected-item-add-new-button\">' +\n        '    <div class=\"ui-drop-down-selected-add-new-button-name\">' +\n        '       Добавить' +\n        '    </div>' +\n        '    <a class=\"ui-drop-down-selected-add-btn\"></a>' +\n        '</div>';\n\n    var DEFAULT_OPTIONS = {\n        multiple: true,\n        autocomplete: true,\n        showAvatars: true,\n        defaultAvatarUrl: null,\n        limit: 10,\n        autoInit: true,\n\n        serverSide: false,\n        serverSideUrl: '/',\n        serverSideMethod: 'GET',\n        serverSideFindProperty: 'domain',\n        serverLimit: 1000,\n\n        suggestionIdentifierProperty: 'uid',\n\n        suggestionTemplateWithAvatar: DEFAULT_SUGGESTION_TEMPLATE,\n        suggestionTemplateWithoutAvatar: DEFAULT_SUGGESTION_TEMPLATE_WITHOUT_AVATARS,\n        selectedMultipleItemTemplate: DEFAULT_MULTIPLE_SELECTED_ITEM_TEMPLATE,\n        selectedSingleItemTemplate: DEFAULT_SINGLE_SELECTED_ITEM_TEMPLATE,\n        emptyMessageTemplate: DEFAULT_EMPTY_MESSAGE,\n        addNewButtonTemplate: ADD_NEW_BUTTON_TEMPLATE\n\n    };\n\n    /**\n     * Виджет для создания dropDown\n     * @param {string} selector - css селектор элемента ввода. Используется querySelector. Т.е. привязка будет по\n     *                            первому найденному элменту\n     * @param {object} options -  Парметры виджета\n     * @param {Array} options.suggestions - Список варинатов(предложений)\n     * @param {Function} [options.matcher = uiDropDownUsersMatcher] - Функция для определения подходит ли эелемент\n     *                                                                под критерии выбора(префикс).\n     * @param {Boolean} [options.multiple = true]  - Задает режим выбора. Множественный выбор или нет. Default = true\n     * @param {Boolean} [options.autocomplete = true]- Использовать ли поиск по подстроке. Default = true\n     * @param {Boolean} [options.showAvatars = true] - Отображать ли автарки в спике\n     * @param {String} options.defaultAvatarUrl - Url аватарки если она отсутствует у пользователя\n     * @param {Number} [options.limit = 10] - Максимальное количество отображаемых элементов в списке\n     * @param {Boolean} [options.autoInit = true] - Проводить ли инициализацию сразу.\n     * @param {Boolean} [options.serverSide = false] - Призводить ли поиск на сервере\n     * @param {String} [options.serverSideUrl = ''] - Url адрес апи для поиска\n     * @param {String} [options.serverSideFindProperty = 'domain'] - Аргумент по котрому будет произведен поиск\n     *                 Т.е это название GET/POST/PUT параметра по которому произойдет запрос, например:\n     *                 http://api.com/fing?<serverSideFindProperty>=<prefix>\n     * @param {Number} [options.serverLimit = 1000] - Лимит для запроса к серверу\n     * @param {String} [options.suggestionIdentifierProperty = 'uid'] - Название аттрибута - уникального идентификатора\n     *                                                                  записи(пользователя).\n     *\n     * @param {String} [options.suggestionTemplateWithAvatar] - Шаблон для элемента списка с аватаром\n     * @param {String} [options.suggestionTemplateWithoutAvatar] - Шаблон для элемента списка без аватара\n     * @param {String} [options.selectedMultipleItemTemplate] - Шаблон для выбранного элемента при множественном выборе\n     * @param {String} [options.selectedSingleItemTemplate] - Шаблон для выбранного элемента при одиночном выборе\n     * @param {String} [options.emptyMessageTemplate] - Шаблон для пустого сообщения\n     *\n     * @constructor\n     *\n     */\n    function UiDropDown(selector, options) {\n        var self = this;\n\n        options = options || {};\n\n        self.options = Object.assign({}, DEFAULT_OPTIONS, options);\n        self.matcher = self.options.matcher || uiDropDownUsersMatcher;\n\n        self.suggestions = self.options.suggestions || [];\n        self.matchedSuggestions = [];\n        self.selectedItems = Object.create(null);\n\n        self._cache = Object.create(null);\n        self._lastVal = null;\n        self._serverQuryIsRunning = false;\n        self._matchesSuggestionIds = Object.create(null);\n        self._hoveredSuggestionUiElement = null;\n        self._initialized = false;\n        self._initialSelectedItems = null;\n\n        self._scrollDelta = 55;\n\n        // ------------------------------------\n        // Public methods\n        // ------------------------------------\n\n        self.open = open;\n        self.close = close;\n        self.search = search;\n        self.init = init;\n        self.getSelected = getSelected;\n        self.setSuggestions = setSuggestions;\n        self.setSelected = setSelected;\n        self.activate = activate;\n\n        /**\n         *  Производит ининциализацию виджета\n         */\n        function init() {\n            self._suggestionTemplate = _getSuggestionTemplate();\n            self._selectedItemTemplate = _getSelectedItemTemplate();\n            _initInputElement();\n\n            self._dropDownInputWrapper = _createDropDownInputWrapper();\n            self._suggestionsWrapper = _createSuggestionWrapper();\n            self._selectedContainer = _createSelectedSuggestionsContainer();\n            self._dropDownIcon = _createDropDownIcon();\n            _appendElementsToDom();\n            _initBindings();\n            if (self._initialSelectedItems) {\n                self._initialSelectedItems.forEach(function (item) {\n                    _applySelected(item);\n                });\n            }\n            self._initialized = true;\n        }\n\n        /**\n         * Активация виджета: показ списка предложений и активация поля поиска\n         */\n        function activate() {\n            _activateInputElement();\n        }\n\n\n        /**\n         * Открыть список пркдложений. (При этом элемент поиска активирован не будет)\n         */\n        function open() {\n            _hideAddNewButton();\n            if ((!self.options.multiple && self.options.autocomplete) || !self.getSelected().length) {\n                _hideSelectedContainer();\n            }\n            _showSuggestionList();\n            search();\n            _scrollSuggestionWrapperTop();\n        }\n\n        /**\n         * Выполнить поиск по текущему значению элемента поиска\n         */\n        function search() {\n            var prefix = self.inputElement.val();\n            _lookup(prefix);\n            if (self.options.serverSide) {\n                _serverLookUp(prefix);\n            }\n            _renderAllMatchedSuggestions();\n            if (!self._serverQuryIsRunning) {\n                _hoverFirstSuggestion();\n            }\n        }\n\n        /**\n         * Закрыть список предложений\n         */\n        function close() {\n            _hideSuggestionsList();\n            if (self.options.multiple && self.getSelected().length) {\n                _hideInputElement();\n                _showAddNewButton();\n            }\n            if (!self.options.multiple && self.getSelected().length) {\n                _hideInputElement();\n                _showSelectedContainer();\n            }\n\n        }\n\n\n        /**\n         * Получить список выбранных элементов. Важно, что в случае с multiple=false в ответе все равно\n         * Будет список из 1го элемента.\n         * @returns {Array}\n         */\n        function getSelected() {\n            return Object.keys(self.selectedItems).map(function (key) {\n                return self.selectedItems[key];\n            });\n        }\n\n        /**\n         * Утановить выбранные элементы. При этом даже если  multiple=false необходимо передавать список из одного\n         * Элемента. Если  multiple=false, а списке больше одного элмента будет выбран последний.\n         * @param {Array} items\n         */\n        function setSelected(items) {\n            if (self._initialized) {\n                items.forEach(function (item) {\n                    _applySelected(item);\n                });\n            } else {\n                self._initialSelectedItems = items;\n            }\n\n        }\n\n        /**\n         * Установить список возможных вариантов предложений\n         * @param {Array} suggestions\n         */\n        function setSuggestions(suggestions) {\n            self.suggestions = suggestions;\n        }\n\n\n        if (self.options.autoInit) {\n            init();\n        }\n\n        /*************************************************\n         * Внутненние методы для работы с DOM.\n         * Созадние елементов и их отображение\n         ************************************************/\n\n\n        //  --------------------------\n        //  Инициализация и создание\n        //  --------------------------\n\n        function _initInputElement() {\n            self.inputElement = UiElement(selector);\n            self.inputElement.addClass('ui-drop-down-input');\n            if (!self.options.autocomplete) {\n                self.inputElement.setAttribute('readonly', 'true');\n            }\n        }\n\n        function _createDropDownIcon() {\n            var element = UiElement.create('div');\n            element.addClass('ui-widget-drop-down-icon');\n            return element;\n        }\n\n\n        function _createSuggestionWrapper() {\n            var element = UiElement.create('div');\n            element.addClass('ui-drop-down-autocomplete-suggestions');\n            return element;\n        }\n\n        function _createDropDownInputWrapper() {\n            function setStyles(wrapper) {\n                var position = self.inputElement.css().position;\n                wrapper.css({\n                    width: self.inputElement.offsetWidth() + 'px',\n                    position: position\n                });\n            }\n\n            var element = UiElement.create('div');\n            element.addClass('ui-drop-down-input-wrapper');\n            setStyles(element);\n\n            return element;\n        }\n\n\n        function _createSelectedSuggestionsContainer() {\n            function _createAddNewButton() {\n                var addNewButton = UiElement.create('div');\n                addNewButton.addClass('ui-drop-down-selected-suggestion');\n                addNewButton.html(uiRenderTemplate(self.options.addNewButtonTemplate));\n                self._addNewButton = addNewButton;\n                return addNewButton;\n            }\n\n            var element = UiElement.create('div');\n            element.addClass('ui-drop-down-selected-container');\n\n            if(self.options.multiple){\n                element.append(_createAddNewButton());\n            }\n\n            return element;\n        }\n\n\n        function _appendElementsToDom() {\n            self.inputElement.wrap(self._dropDownInputWrapper);\n            document.body.appendChild(self._suggestionsWrapper.element);\n\n            self._dropDownInputWrapper.element.insertBefore(self._dropDownIcon.element, self.inputElement.element);\n            self._dropDownInputWrapper.element.insertBefore(self._selectedContainer.element, self.inputElement.element);\n\n            var originInputElementW = self.inputElement.clientWidth();\n\n            self.inputElement.css({\n                width: originInputElementW - self._dropDownIcon.offsetWidth() - 15 + 'px'\n            });\n        }\n\n        function _applySelected(suggestion) {\n            if (!self.options.multiple) {\n                _clearLastSelected();\n            }\n\n            _addItemToSelected(suggestion);\n            _renderSelectedSuggestion(suggestion);\n            _showSelectedContainer();\n            _hideInputElement();\n        }\n\n        //  --------------------------\n        //  Управление отображением\n        //  ---------------------------\n\n        function _showSelectedContainer() {\n            self._selectedContainer.addClass('show');\n        }\n\n        function _hideSelectedContainer() {\n            self._selectedContainer.removeClass('show');\n        }\n\n        function _hideInputElement() {\n            if (self.getSelected().length) {\n                self.inputElement.addClass('ui-drop-down-hidden');\n            }\n        }\n\n        function _hideAddNewButton() {\n            if(self._addNewButton){\n                self._addNewButton.addClass('ui-drop-down-hidden');\n            }\n        }\n\n        function _showAddNewButton() {\n            if(self._addNewButton){\n                self._addNewButton.removeClass('ui-drop-down-hidden')\n            }\n        }\n\n        function _showInputElement() {\n            self.inputElement.removeClass('ui-drop-down-hidden');\n            if (!self.options.autocomplete && self.getSelected().length) {\n                self.inputElement.addClass('ui-drop-down-input-hidden');\n            } else {\n                self.inputElement.removeClass('ui-drop-down-input-hidden');\n            }\n        }\n\n        function _focusInputElement() {\n            if (document.activeElement !== self.inputElement.element) {\n                self.inputElement.element.focus();\n            }\n        }\n\n        function _showSuggestionList() {\n            self._suggestionsWrapper.addClass('show');\n            _positionSuggestionList();\n        }\n\n        function _hideSuggestionsList() {\n            self._suggestionsWrapper.removeClass('show');\n        }\n\n        function _activateInputElement() {\n            _showInputElement();\n            _focusInputElement();\n        }\n\n        // ------------------------------------\n        // Управление - Выделеение/выбор\n        // ------------------------------------\n\n        function _clearLastHovered() {\n            if (self._hoveredSuggestionUiElement) {\n                self._hoveredSuggestionUiElement.removeClass('ui-drop-down-hovered');\n            }\n        }\n\n        function _hoverFirstSuggestion() {\n            _clearLastHovered();\n            var suggestionElement = self._suggestionsWrapper.element.firstChild;\n            if (suggestionElement) {\n                suggestionElement = UiElement(suggestionElement);\n                suggestionElement.addClass('ui-drop-down-hovered');\n                self._hoveredSuggestionUiElement = suggestionElement;\n\n            }\n        }\n\n        function _hoverSuggestionByElement(element) {\n            var suggestionElement = UiElement(element);\n            _clearLastHovered();\n            suggestionElement.addClass('ui-drop-down-hovered');\n            self._hoveredSuggestionUiElement = suggestionElement;\n        }\n\n        function _selectSuggestionByElement(uiElement) {\n            var suggestionElement = uiElement.element;\n            var suggestion = self.matchedSuggestions.filter(function (s) {\n                return String(s[self.options.suggestionIdentifierProperty]) === String(suggestionElement.getAttribute('data-uid'));\n            });\n\n            suggestion = suggestion[0];\n            if (suggestion) {\n                onSelectSuggestion(suggestion, suggestionElement);\n            }\n        }\n\n        function _positionSuggestionList() {\n            var inputWrapperCoordinates = self._dropDownInputWrapper.getCoordinates();\n\n            self._suggestionsWrapper.style.top =\n                inputWrapperCoordinates.bottom - self._dropDownInputWrapper.clientTop() + 'px';\n\n            self._suggestionsWrapper.style.left = inputWrapperCoordinates.left + 'px';\n\n            self._suggestionsWrapper.style.width =\n                self._dropDownInputWrapper.offsetWidth() - self._suggestionsWrapper.clientLeft() - self._suggestionsWrapper.clientRight() + 'px';\n        }\n\n\n        /*************************************************\n         * Обработка событий. Events\n         ************************************************/\n\n        function _initBindings() {\n            self.inputElement.on('focus', _onFocusInputHandler);\n            self.inputElement.on('keyup', _deBounce(_onKeyUpInputHandler, 300));\n            self.inputElement.on('blur', onBlurInputElementHandler);\n\n            self._dropDownInputWrapper.on('click', _onClickWrapperHandler);\n\n            self._suggestionsWrapper.on('mouseenter', onHoverSuggestionsWrapperHandler);\n            self._suggestionsWrapper.on('mouseleave', onMouseLeaveSuggestionsWrapperHandler);\n            self._dropDownInputWrapper.on('keyup', _onKeyUpWrapperHandler, true);\n        }\n\n\n        function _onKeyUpWrapperHandler(event) {\n            var next = null;\n            var prev = null;\n\n            if (event.keyCode == uiDropDownEventsKeyCodes.ARROW_DOWN) {\n                event.stopPropagation();\n                if (self._hoveredSuggestionUiElement) {\n                    next = self._hoveredSuggestionUiElement.next();\n                    if (next) {\n                        _hoverSuggestionByElement(next);\n                    }\n                }\n\n                // TODO: Поправить скрол - не искользовать захардкоженное значение смещения\n                // TODO: сролить 'постранично\"\n\n                _scrollSuggestionWrapperDown();\n            }\n\n            if (event.keyCode == uiDropDownEventsKeyCodes.ARROW_UP) {\n                event.stopPropagation();\n                if (self._hoveredSuggestionUiElement) {\n                    prev = self._hoveredSuggestionUiElement.prev();\n                    if (prev) {\n                        _hoverSuggestionByElement(prev);\n                    }\n                }\n                // TODO: Поправить скрол - не искользовать захардкоженное значение смещения\n                // TODO: сролить 'постранично\"\n                _scrollSuggestionWrapperUp();\n            }\n\n            if (event.keyCode == uiDropDownEventsKeyCodes.ENTER) {\n                event.stopPropagation();\n                _selectSuggestionByElement(self._hoveredSuggestionUiElement);\n\n            }\n\n            if (event.keyCode == uiDropDownEventsKeyCodes.ESCAPE) {\n                event.stopPropagation();\n                close();\n                self.inputElement.element.blur();\n            }\n        }\n\n        function _onFocusInputHandler() {\n            open();\n        }\n\n        function _onKeyUpInputHandler() {\n            search();\n        }\n\n        function _onClickWrapperHandler(event) {\n            var target = event.target;\n            // Игнорирвоать клики на имени выбранного элемента\n            if(target.getAttribute('data-is-selected-name') === 'true'){\n                return;\n            }\n\n            // Клик на кнопке удаления\n            if (target.getAttribute('data-is-remove-button') === 'true') {\n                _removeSelectedSuggestionByElement(target);\n                if (!self.getSelected().length) {\n                    _hideSelectedContainer();\n                    _showInputElement();\n                }\n                return;\n            }\n            _activateInputElement();\n        }\n\n\n        function onBlurInputElementHandler() {\n            if (self._suggestionsWrapper.hovered) {\n                return;\n            }\n            close();\n        }\n\n        function onHoverSuggestionsWrapperHandler() {\n            self._suggestionsWrapper.hovered = true;\n        }\n\n        function onMouseLeaveSuggestionsWrapperHandler() {\n            self._suggestionsWrapper.hovered = false;\n        }\n\n        function onSelectSuggestion(suggestion, element) {\n            if (!self.options.multiple) {\n                _clearLastSelected();\n            }\n\n            _addItemToSelected(suggestion);\n\n            element.parentNode.removeChild(element);\n            self.inputElement.val('');\n\n            _hideSuggestionsList();\n            _renderSelectedSuggestion(suggestion);\n            _hideInputElement();\n\n            // Событие не будет послано брузером. Поэтому нужно простваить руками.\n            self._suggestionsWrapper.hovered = false;\n            _showSelectedContainer();\n            _showAddNewButton();\n        }\n\n        function onHoverSuggestion(element) {\n            _hoverSuggestionByElement(element)\n        }\n\n        /*************************************************\n         * Утилиты\n         ************************************************/\n\n        //  -------------------------\n        //  Инициализация\n        //  -------------------------\n\n        function _getSuggestionTemplate() {\n            if (self.options.showAvatars) {\n                return self.options.suggestionTemplateWithAvatar;\n            }\n            return self.options.suggestionTemplateWithoutAvatar;\n        }\n\n        function _getSelectedItemTemplate() {\n            if (self.options.multiple) {\n                return self.options.selectedMultipleItemTemplate;\n            }\n            return self.options.selectedSingleItemTemplate;\n        }\n\n        //  -------------------------\n        //  Работа с вариантами\n        //  -------------------------\n\n        function _isSelected(item) {\n            return Boolean(self.selectedItems[item[self.options.suggestionIdentifierProperty]]);\n        }\n\n        function _addItemToSelected(item) {\n            self.selectedItems[item[self.options.suggestionIdentifierProperty]] = item;\n        }\n\n        function _isInMatched(item) {\n            return Boolean(self._matchesSuggestionIds[item[self.options.suggestionIdentifierProperty]]);\n        }\n\n        function _addToMatched(item) {\n            self.matchedSuggestions.push(item);\n            self._matchesSuggestionIds[item[self.options.suggestionIdentifierProperty]] = true;\n        }\n\n        //  -----------------------\n        //  Общее\n        //  -----------------------\n\n        function _deBounce(func, wait, immediate) {\n            var timeout;\n            return function () {\n                var context = this, args = arguments;\n\n                var later = function () {\n                    timeout = null;\n                    if (!immediate) func.apply(context, args);\n                };\n\n                var callNow = immediate && !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(later, wait);\n                if (callNow) {\n                    func.apply(context, args);\n                }\n            };\n        }\n\n        // ------------------------------------\n        // Отображаение вариантов и выбранных\n        // ------------------------------------\n\n\n        function _renderAllMatchedSuggestions() {\n\n            // Если пачка предложений пуста, то производить очистку и показвать сообщение нужно только\n            // Если предложения не смогут появиться с сервера\n\n            if (!self.matchedSuggestions.length && !self._serverQuryIsRunning) {\n                _clearMatchedSuggestionsList();\n                _showEmptySuggestionMessage();\n                return;\n            }\n\n            // Если запрос еще выпоняется, то очистку списка нужно производить\n            // Только если есть записи\n\n            if (self.matchedSuggestions.length) {\n                _clearMatchedSuggestionsList();\n            }\n            self.matchedSuggestions.forEach(function (item) {\n                _renderMatchedSuggestion(item);\n            });\n        }\n\n\n        function _renderMatchedSuggestion(suggestion) {\n            var matchedBy = suggestion.mathedBy;\n            delete suggestion.mathedBy;\n\n            var dropDownSuggestionItem = DropDownSuggestionItem(\n                self._suggestionTemplate, suggestion, matchedBy, self.options.defaultAvatarUrl\n            );\n            dropDownSuggestionItem.render();\n\n            dropDownSuggestionItem.uiElement.on('click', function () {\n                onSelectSuggestion(suggestion, this);\n            });\n\n            dropDownSuggestionItem.uiElement.on('mouseenter', function () {\n                onHoverSuggestion(this);\n            });\n\n            self._suggestionsWrapper.append(dropDownSuggestionItem.uiElement);\n        }\n\n        function _renderSelectedSuggestion(suggestion) {\n            var selectedItem = DropDownSelectedSuggestionItem(\n                self._selectedItemTemplate, suggestion, self.options.multiple\n            );\n            selectedItem.render();\n            if(self.options.multiple){\n                self._selectedContainer.element.insertBefore(selectedItem.uiElement.element, self._addNewButton.element);\n                return;\n            }\n            self._selectedContainer.append(selectedItem.uiElement);\n        }\n\n        function _clearLastSelected() {\n            Object.keys(self.selectedItems).forEach(function (prop) {\n                delete self.selectedItems[prop];\n            });\n            var children = self._selectedContainer.children();\n            children.forEach(function (child) {\n                child.parentNode.removeChild(child);\n            });\n        }\n\n        function _clearMatchedSuggestionsList() {\n            var children = self._suggestionsWrapper.children();\n\n            children.forEach(function (childNode) {\n                self._suggestionsWrapper.removeChild(childNode);\n            });\n        }\n\n        function _showEmptySuggestionMessage() {\n            var dropDownItem = DropDownSuggestionItem(self.options.emptyMessageTemplate, {name: 'empty'});\n            dropDownItem.render();\n            self._suggestionsWrapper.append(dropDownItem.uiElement);\n        }\n\n        function _removeSelectedSuggestionByElement(element) {\n            var uid = element.getAttribute('data-user-id');\n            var container = _getContainer(element);\n            if (container) {\n                container.parentNode.removeChild(container);\n            }\n            delete self.selectedItems[uid];\n\n            function _getContainer(element) {\n                var container = element.parentNode;\n                if (container.getAttribute('data-is-selected-suggestion') === 'true') {\n                    return container;\n                }\n                if (container === document.body) {\n                    return null;\n                }\n                return _getContainer(container);\n            }\n        }\n\n        //  ---------------------------------\n        //  Скролл\n        //  ---------------------------------\n        function _scrollSuggestionWrapperDown() {\n            self._suggestionsWrapper.element.scrollTop += self._scrollDelta;\n        }\n\n        function _scrollSuggestionWrapperUp() {\n            self._suggestionsWrapper.element.scrollTop -= self._scrollDelta;\n        }\n\n        function _scrollSuggestionWrapperTop() {\n            self._suggestionsWrapper.element.scrollTop = 0;\n        }\n\n\n        /***********************************************\n         * Поиск\n         ************************************************/\n\n\n        //  ---------------------------------------------\n        //  Локальный поиск на клиенте\n        //  ---------------------------------------------\n\n        function _lookUpEmptyPrefix() {\n            for (var i = 0; i < self.suggestions.length; i++) {\n                var item = self.suggestions[i];\n                if (_isSelected(item)) {\n                    continue;\n                }\n                _addToMatched(item);\n                if (self.matchedSuggestions.length >= self.options.limit) {\n                    break;\n                }\n            }\n        }\n\n        function _lookup(prefix) {\n            if (prefix == self._lastVal && prefix !== '') {\n                return;\n            }\n\n            self._lastVal = prefix;\n            self.matchedSuggestions = [];\n            self._matchesSuggestionIds = Object.create(null);\n\n            if (prefix === '') {\n                _lookUpEmptyPrefix();\n                return;\n            }\n\n            console.time('lookUp');\n            for (var i = 0; i < self.suggestions.length; i++) {\n                var matchResult = self.matcher(prefix, self.suggestions[i], self.selectedItems);\n                if (matchResult.matched) {\n                    self.suggestions[i].mathedBy = matchResult.matchedBy;\n                    _addToMatched(self.suggestions[i]);\n                }\n                if (self.matchedSuggestions.length >= self.options.limit) {\n                    break\n                }\n            }\n            console.timeEnd('lookUp');\n        }\n\n\n        //  ---------------------------------------------\n        //  Поиск с сервера\n        //  ---------------------------------------------\n\n\n        function _appendMatchedSuggestionsFromServer(suggestions) {\n            for (var i = 0; i < suggestions.length; i++) {\n                var suggestion = suggestions[i];\n                if (!_isSelected(suggestion) && !_isInMatched(suggestion)) {\n                    _addToMatched(suggestion);\n                    _renderMatchedSuggestion(suggestion);\n                }\n                if (self.matchedSuggestions.length >= self.options.limit) {\n                    break;\n                }\n            }\n        }\n\n        function _onServerLookUpLoaded(prefix, response) {\n            self._cache[prefix] = response.result;\n            if (!self.matchedSuggestions.length) {\n                _clearMatchedSuggestionsList();\n            }\n            if (response.result.length) {\n                _appendMatchedSuggestionsFromServer(response.result);\n            } else if (!self.matchedSuggestions.length) {\n                _showEmptySuggestionMessage();\n            }\n\n            _hoverFirstSuggestion();\n        }\n\n        function _serverLookUp(prefix) {\n            if (prefix == '') {\n                return;\n            }\n\n            self._serverQuryIsRunning = true;\n            var _cached = self._cache[prefix];\n            var findParams = {};\n\n            if (_cached) {\n                _appendMatchedSuggestionsFromServer(_cached);\n                self._serverQuryIsRunning = false;\n                return;\n            }\n\n            // Нужноиспользовать достаточно большой лимит для запроса на сервер\n            // Чтобы не столкнуться с проблеиой недоступности данных по првефиксу\n            findParams[self.options.serverSideFindProperty] = prefix;\n            findParams['limit'] = self.options.serverLimit;\n\n            uiDropDownajax({\n                method: self.options.serverSideMethod,\n                url: self.options.serverSideUrl,\n                data: findParams,\n                params: findParams,\n                onError: function (xrh) {\n                    console.log('ERROR', xrh.statusText);\n                    if (!self.matchedSuggestions.length) {\n                        _clearMatchedSuggestionsList();\n                        _showEmptySuggestionMessage();\n                    }\n                    self._serverQuryIsRunning = false;\n                },\n                onSuccess: function (response) {\n                    _onServerLookUpLoaded(prefix, response);\n                    self._serverQuryIsRunning = false;\n                }\n            });\n        }\n\n    }\n\n    window.UiDropDown = UiDropDown;\n})(window);"]}